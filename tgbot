{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f7c8a40c-695f-4a97-9604-84f52d7267fb",
   "metadata": {},
   "source": [
    "# Telegram Testing"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "edac7879-fe40-4a28-963b-d5a1214c2f24",
   "metadata": {},
   "source": [
    "## Регистрируем канал"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bfcd595b-d094-4351-a733-6cc29b72ad9b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------------------------------\n",
      "Заходим в телеграм с компьютера\n",
      "--------------------------------------------------------------------------------\n",
      "Создать канал в левом верхнем с 3 полосками, пишем желаемую ссылку, публичный канал\n",
      "--------------------------------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "print('-'*80)\n",
    "print('Скачиваем Telegram Desktop на персональный компьютер')\n",
    "print('-'*80)\n",
    "print('Заходим в телеграм с компьютера')\n",
    "print('-'*80)\n",
    "print('Создать канал в левом верхнем углу с 3 полосками, пишем желаемую ссылку, публичный канал')\n",
    "print('-'*80)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f73194bc-862b-4d29-aa47-04ec0d180887",
   "metadata": {},
   "source": [
    "## Забираем айди канала"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cc14c15d-294f-438f-9e59-307785ef233d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------------------------------\n",
      "Находим пользователя @username_to_id_bot\n",
      "--------------------------------------------------------------------------------\n",
      "Пишем /start\n",
      "--------------------------------------------------------------------------------\n",
      "Добавляем наш канал либо мышкой либо ссылок\n",
      "--------------------------------------------------------------------------------\n",
      "Отправить сигналы на канал, чтобы увидеть ID, его забираем, пример -1001833013585 (если видим минус, то значит с минусом)\n"
     ]
    }
   ],
   "source": [
    "print('-'*80)\n",
    "print('Находим пользователя @username_to_id_bot')\n",
    "print('-'*80)\n",
    "print('Пишем /start')\n",
    "print('-'*80)\n",
    "print('Добавляем наш канал либо мышкой либо ссылок')\n",
    "print('-'*80)\n",
    "print('Отправить сигналы на канал, чтобы увидеть ID, его забираем, пример -1001833013585 (если видим минус, то значит с минусом)')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f2160b5-61d1-45f8-8256-26a316d946e2",
   "metadata": {},
   "source": [
    "## Создаем Бота"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "03fa5429-7ae6-494b-8d26-b3f425b64403",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------------------------------\n",
      "Найдите бота @BotFather\n",
      "--------------------------------------------------------------------------------\n",
      "Пишем /start\n",
      "--------------------------------------------------------------------------------\n",
      "Пишем /newbot\n",
      "--------------------------------------------------------------------------------\n",
      "Делаем имя и вызов через имя_bot\n",
      "--------------------------------------------------------------------------------\n",
      "Забираем токен бота, пример 6056286733:AAHCMXl1EeJqU5ShC1ILNYGA-XWD5tJjfPc\n"
     ]
    }
   ],
   "source": [
    "print('-'*80)\n",
    "print('Найдите бота @BotFather')\n",
    "print('-'*80)\n",
    "print('Пишем /start')\n",
    "print('-'*80)\n",
    "print('Пишем /newbot')\n",
    "print('-'*80)\n",
    "print('Делаем имя и вызов через имя_bot')\n",
    "print('-'*80)\n",
    "print('Забираем токен бота, пример 6056286733:AAHCMXl1EeJqU5ShC1ILNYGA-XWD5tJjfPc')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e7305f7-a23b-412c-a337-0860219af581",
   "metadata": {},
   "source": [
    "## Добавляем бота в наш канал через пользователей как Админа"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e5603eee-52a7-4aaa-a4ce-58d1a610963d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------------------------------\n",
      "Открываем наш канал и добавляем нашего бота как админа\n",
      "--------------------------------------------------------------------------------\n",
      "Проверяем там ли он\n",
      "--------------------------------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "print('-'*80)\n",
    "print('Открываем наш канал и добавляем нашего бота как админа')\n",
    "print('-'*80)\n",
    "print('Проверяем там ли он')\n",
    "print('-'*80)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f105c316-d68b-402a-8366-37e2b681d79d",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import requests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1e2bcce2-3b2c-4247-808c-c56dd1585c58",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "def send_telegram(text: str):\n",
    "    token = \"7433467347:AAFy3tfbJMXrYWKoQ5_Lz44_-TieuceSDGM\"\n",
    "    url = \"https://api.telegram.org/bot\"\n",
    "    channel_id = \"-1002241832528\"\n",
    "    url += token\n",
    "    method = url + \"/sendMessage\"\n",
    "\n",
    "    r = requests.post(method, data={\n",
    "        \"chat_id\": channel_id,\n",
    "        \"text\": text\n",
    "    })\n",
    "\n",
    "    if r.status_code != 200:\n",
    "        raise Exception(\"post_text error\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ffe7cb33-c412-42d0-b531-d812f582884e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "send_telegram(f\"Привет, продавай!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8e0fa1a6-d6b9-4056-84f2-e44c21e4f2a2",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "send_telegram(f\"Всем привет, у нас есть канал!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d21941db-bc90-4f91-9285-4824812962b5",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import random\n",
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "413e8c07-cc87-41ca-9559-e63845e514b0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "random.randint(1,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6e829757-2b45-4f6e-95cd-ec77859e4be3",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "KeyboardInterrupt\n",
      "\n"
     ]
    }
   ],
   "source": [
    "while True:\n",
    "    send_telegram(f\"{random.randint(1,5)}\")\n",
    "    time.sleep(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39487294-1101-47ec-ba6e-f532da8aa757",
   "metadata": {},
   "source": [
    "## MoexAlgo"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee0fb57d-79bd-4f38-a881-557563c48675",
   "metadata": {},
   "source": [
    "### Фьючерсы"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "380ba621-3089-4ae4-952f-d511e24de36e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from moexalgo import Market, Ticker, CandlePeriod"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f28c0866-722c-482a-995e-78e9e0cb0fb0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>shortname</th>\n",
       "      <th>decimals</th>\n",
       "      <th>minstep</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AEH5</td>\n",
       "      <td>AED-3.25</td>\n",
       "      <td>3</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AEM5</td>\n",
       "      <td>AED-6.25</td>\n",
       "      <td>3</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AEU4</td>\n",
       "      <td>AED-9.24</td>\n",
       "      <td>3</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AEZ4</td>\n",
       "      <td>AED-12.24</td>\n",
       "      <td>3</td>\n",
       "      <td>0.001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AFH5</td>\n",
       "      <td>AFLT-3.25</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>397</th>\n",
       "      <td>WUM5</td>\n",
       "      <td>WUSH-6.25</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>398</th>\n",
       "      <td>WUU4</td>\n",
       "      <td>WUSH-9.24</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>399</th>\n",
       "      <td>WUZ4</td>\n",
       "      <td>WUSH-12.24</td>\n",
       "      <td>0</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>400</th>\n",
       "      <td>ZnU4</td>\n",
       "      <td>Zn-9.24</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>401</th>\n",
       "      <td>ZnZ4</td>\n",
       "      <td>Zn-12.24</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>402 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    ticker   shortname  decimals  minstep\n",
       "0     AEH5    AED-3.25         3    0.001\n",
       "1     AEM5    AED-6.25         3    0.001\n",
       "2     AEU4    AED-9.24         3    0.001\n",
       "3     AEZ4   AED-12.24         3    0.001\n",
       "4     AFH5   AFLT-3.25         0    1.000\n",
       "..     ...         ...       ...      ...\n",
       "397   WUM5   WUSH-6.25         0    1.000\n",
       "398   WUU4   WUSH-9.24         0    1.000\n",
       "399   WUZ4  WUSH-12.24         0    1.000\n",
       "400   ZnU4     Zn-9.24         1    0.500\n",
       "401   ZnZ4    Zn-12.24         1    0.500\n",
       "\n",
       "[402 rows x 4 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fo = Market('FO')\n",
    "fo.tickers()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ccbb8c6-f65c-4b87-a191-3b886c8c526a",
   "metadata": {},
   "source": [
    "### Валюты"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b1bb1d73-ccc4-4486-b793-7b4d0575da0b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>shortname</th>\n",
       "      <th>lotsize</th>\n",
       "      <th>decimals</th>\n",
       "      <th>minstep</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AEDRUBTODTOM</td>\n",
       "      <td>AED_TODTOM</td>\n",
       "      <td>100000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AEDRUB_SPT</td>\n",
       "      <td>AEDRUB_SPT</td>\n",
       "      <td>1000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AEDRUB_TMS</td>\n",
       "      <td>AEDRUB_TMS</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AEDRUB_TOD</td>\n",
       "      <td>AEDRUB_TOD</td>\n",
       "      <td>1000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AEDRUB_TOM</td>\n",
       "      <td>AEDRUB_TOM</td>\n",
       "      <td>1000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>194</th>\n",
       "      <td>UZSRUB_TOM</td>\n",
       "      <td>UZSRUB_TOM</td>\n",
       "      <td>1000000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>ZARRUBTODTOM</td>\n",
       "      <td>ZAR_TODTOM</td>\n",
       "      <td>1000000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>ZARRUB_TMS</td>\n",
       "      <td>ZARRUB_TMS</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>ZARRUB_TOD</td>\n",
       "      <td>ZARRUB_TOD</td>\n",
       "      <td>10000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0025</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>ZARRUB_TOM</td>\n",
       "      <td>ZARRUB_TOM</td>\n",
       "      <td>10000</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0025</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>199 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           ticker   shortname  lotsize  decimals  minstep\n",
       "0    AEDRUBTODTOM  AED_TODTOM   100000         4   0.0001\n",
       "1      AEDRUB_SPT  AEDRUB_SPT     1000         4   0.0025\n",
       "2      AEDRUB_TMS  AEDRUB_TMS        1         4   0.0025\n",
       "3      AEDRUB_TOD  AEDRUB_TOD     1000         4   0.0025\n",
       "4      AEDRUB_TOM  AEDRUB_TOM     1000         4   0.0025\n",
       "..            ...         ...      ...       ...      ...\n",
       "194    UZSRUB_TOM  UZSRUB_TOM  1000000         4   0.0025\n",
       "195  ZARRUBTODTOM  ZAR_TODTOM  1000000         4   0.0001\n",
       "196    ZARRUB_TMS  ZARRUB_TMS        1         4   0.0025\n",
       "197    ZARRUB_TOD  ZARRUB_TOD    10000         4   0.0025\n",
       "198    ZARRUB_TOM  ZARRUB_TOM    10000         4   0.0025\n",
       "\n",
       "[199 rows x 5 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fx = Market('FX')\n",
    "fx.tickers()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47a10ddd-a7fb-4dc1-b026-6a17753a6f02",
   "metadata": {},
   "source": [
    "### Акции"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3aad0e19-60e0-418f-9ec6-321bc34f7d69",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>shortname</th>\n",
       "      <th>lotsize</th>\n",
       "      <th>decimals</th>\n",
       "      <th>minstep</th>\n",
       "      <th>issuesize</th>\n",
       "      <th>isin</th>\n",
       "      <th>regnumber</th>\n",
       "      <th>listlevel</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ABIO</td>\n",
       "      <td>iАРТГЕН ао</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>0.020</td>\n",
       "      <td>92645451</td>\n",
       "      <td>RU000A0JNAB6</td>\n",
       "      <td>1-01-08902-A</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ABRD</td>\n",
       "      <td>АбрауДюрсо</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>0.200</td>\n",
       "      <td>98000184</td>\n",
       "      <td>RU000A0JS5T7</td>\n",
       "      <td>1-02-12500-A</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ACKO</td>\n",
       "      <td>АСКО ао</td>\n",
       "      <td>100</td>\n",
       "      <td>2</td>\n",
       "      <td>0.020</td>\n",
       "      <td>536000000</td>\n",
       "      <td>RU000A0JXS91</td>\n",
       "      <td>1-01-52065-Z</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AFKS</td>\n",
       "      <td>Система ао</td>\n",
       "      <td>100</td>\n",
       "      <td>3</td>\n",
       "      <td>0.001</td>\n",
       "      <td>9650000000</td>\n",
       "      <td>RU000A0DQZE3</td>\n",
       "      <td>1-05-01669-A</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AFLT</td>\n",
       "      <td>Аэрофлот</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>0.010</td>\n",
       "      <td>3975771215</td>\n",
       "      <td>RU0009062285</td>\n",
       "      <td>1-01-00010-A</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>YRSB</td>\n",
       "      <td>ТНСэнЯр</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>2.000</td>\n",
       "      <td>17143584</td>\n",
       "      <td>RU000A0D8760</td>\n",
       "      <td>1-01-50099-A</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>YRSBP</td>\n",
       "      <td>ТНСэнЯр-п</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>0.500</td>\n",
       "      <td>4507320</td>\n",
       "      <td>RU000A0D88B3</td>\n",
       "      <td>2-01-50099-A</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>ZAYM</td>\n",
       "      <td>Займер ао</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>0.050</td>\n",
       "      <td>100000000</td>\n",
       "      <td>RU000A107RM8</td>\n",
       "      <td>1-01-16767-A</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>ZILL</td>\n",
       "      <td>ЗИЛ ао</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5.000</td>\n",
       "      <td>2659962</td>\n",
       "      <td>RU0009086193</td>\n",
       "      <td>1-02-00036-A</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>ZVEZ</td>\n",
       "      <td>ЗВЕЗДА ао</td>\n",
       "      <td>1000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.010</td>\n",
       "      <td>562020480</td>\n",
       "      <td>RU0009091300</td>\n",
       "      <td>1-01-00169-D</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>253 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    ticker   shortname  lotsize  decimals  minstep   issuesize          isin  \\\n",
       "0     ABIO  iАРТГЕН ао       10         2    0.020    92645451  RU000A0JNAB6   \n",
       "1     ABRD  АбрауДюрсо       10         1    0.200    98000184  RU000A0JS5T7   \n",
       "2     ACKO     АСКО ао      100         2    0.020   536000000  RU000A0JXS91   \n",
       "3     AFKS  Система ао      100         3    0.001  9650000000  RU000A0DQZE3   \n",
       "4     AFLT    Аэрофлот       10         2    0.010  3975771215  RU0009062285   \n",
       "..     ...         ...      ...       ...      ...         ...           ...   \n",
       "248   YRSB     ТНСэнЯр       10         0    2.000    17143584  RU000A0D8760   \n",
       "249  YRSBP   ТНСэнЯр-п       10         1    0.500     4507320  RU000A0D88B3   \n",
       "250   ZAYM   Займер ао       10         2    0.050   100000000  RU000A107RM8   \n",
       "251   ZILL      ЗИЛ ао        1         0    5.000     2659962  RU0009086193   \n",
       "252   ZVEZ   ЗВЕЗДА ао     1000         2    0.010   562020480  RU0009091300   \n",
       "\n",
       "        regnumber  listlevel  \n",
       "0    1-01-08902-A          2  \n",
       "1    1-02-12500-A          3  \n",
       "2    1-01-52065-Z          3  \n",
       "3    1-05-01669-A          1  \n",
       "4    1-01-00010-A          1  \n",
       "..            ...        ...  \n",
       "248  1-01-50099-A          3  \n",
       "249  2-01-50099-A          3  \n",
       "250  1-01-16767-A          3  \n",
       "251  1-02-00036-A          3  \n",
       "252  1-01-00169-D          3  \n",
       "\n",
       "[253 rows x 9 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eq = Market('EQ')\n",
    "eq.tickers()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f63682d3-ef49-4c0b-9bc1-b4abe057d491",
   "metadata": {},
   "source": [
    "## ТГ по MoexAlgo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "264bc249-fc33-4be2-8aaa-75993b1443a1",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                      open  close   high    low        value     volume ticker\n",
      "date                                                                          \n",
      "2024-07-16 14:00:00  53.67  53.49  53.69  53.19   44093733.9   825790.0   AFLT\n",
      "2024-07-16 15:00:00  53.49  53.54  53.69  53.20   57317698.8  1073250.0   AFLT\n",
      "2024-07-16 16:00:00  53.53  53.02  53.53  52.76  115164025.8  2170620.0   AFLT\n",
      "2024-07-16 17:00:00  53.01  54.00  54.08  52.80  132720163.9  2497090.0   AFLT\n",
      "2024-07-16 18:00:00  54.01  54.58  55.15  53.59  355213137.9  6531470.0   AFLT\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from moexalgo import Ticker\n",
    "\n",
    "# Функция для обработки данных свечей\n",
    "def process_candles(data, ticker_name):\n",
    "    df = pd.DataFrame(data)\n",
    "    df.drop(columns=['end'], inplace=True)\n",
    "    df.rename(columns={'begin': 'date'}, inplace=True)\n",
    "    df.set_index('date', inplace=True)\n",
    "    df['ticker'] = ticker_name\n",
    "    return df\n",
    "\n",
    "# Выбираем тикер, получаем и обрабатываем данные свечей\n",
    "ticker = 'AFLT'\n",
    "data = Ticker(ticker).candles(start='2024-05-23', end='2024-07-16', period=60)\n",
    "df = process_candles(data, ticker)\n",
    "\n",
    "# Выводим первые строки DataFrame\n",
    "print(df.tail())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6db026d4-09c6-4f4c-83d9-80863bfe1630",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas_ta as ta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d9df48f0-9d54-4a75-810b-1d9690e6fa7b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>open</th>\n",
       "      <th>close</th>\n",
       "      <th>high</th>\n",
       "      <th>low</th>\n",
       "      <th>value</th>\n",
       "      <th>volume</th>\n",
       "      <th>ticker</th>\n",
       "      <th>RSI_14</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2024-05-23 09:00:00</th>\n",
       "      <td>58.01</td>\n",
       "      <td>58.01</td>\n",
       "      <td>58.01</td>\n",
       "      <td>58.01</td>\n",
       "      <td>290630.1</td>\n",
       "      <td>5010.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-23 10:00:00</th>\n",
       "      <td>58.01</td>\n",
       "      <td>57.47</td>\n",
       "      <td>58.01</td>\n",
       "      <td>57.30</td>\n",
       "      <td>265629856.5</td>\n",
       "      <td>4614020.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-23 11:00:00</th>\n",
       "      <td>57.52</td>\n",
       "      <td>57.38</td>\n",
       "      <td>57.57</td>\n",
       "      <td>57.09</td>\n",
       "      <td>192771131.2</td>\n",
       "      <td>3361750.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-23 12:00:00</th>\n",
       "      <td>57.37</td>\n",
       "      <td>57.47</td>\n",
       "      <td>57.70</td>\n",
       "      <td>57.09</td>\n",
       "      <td>165951291.0</td>\n",
       "      <td>2892840.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-05-23 13:00:00</th>\n",
       "      <td>57.47</td>\n",
       "      <td>57.59</td>\n",
       "      <td>57.91</td>\n",
       "      <td>57.44</td>\n",
       "      <td>104315322.4</td>\n",
       "      <td>1808510.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-07-16 14:00:00</th>\n",
       "      <td>53.67</td>\n",
       "      <td>53.49</td>\n",
       "      <td>53.69</td>\n",
       "      <td>53.19</td>\n",
       "      <td>44093733.9</td>\n",
       "      <td>825790.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>39.893681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-07-16 15:00:00</th>\n",
       "      <td>53.49</td>\n",
       "      <td>53.54</td>\n",
       "      <td>53.69</td>\n",
       "      <td>53.20</td>\n",
       "      <td>57317698.8</td>\n",
       "      <td>1073250.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>40.685373</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-07-16 16:00:00</th>\n",
       "      <td>53.53</td>\n",
       "      <td>53.02</td>\n",
       "      <td>53.53</td>\n",
       "      <td>52.76</td>\n",
       "      <td>115164025.8</td>\n",
       "      <td>2170620.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>35.455009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-07-16 17:00:00</th>\n",
       "      <td>53.01</td>\n",
       "      <td>54.00</td>\n",
       "      <td>54.08</td>\n",
       "      <td>52.80</td>\n",
       "      <td>132720163.9</td>\n",
       "      <td>2497090.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>48.811038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2024-07-16 18:00:00</th>\n",
       "      <td>54.01</td>\n",
       "      <td>54.58</td>\n",
       "      <td>55.15</td>\n",
       "      <td>53.59</td>\n",
       "      <td>355213137.9</td>\n",
       "      <td>6531470.0</td>\n",
       "      <td>AFLT</td>\n",
       "      <td>54.775547</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>565 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                      open  close   high    low        value     volume  \\\n",
       "date                                                                      \n",
       "2024-05-23 09:00:00  58.01  58.01  58.01  58.01     290630.1     5010.0   \n",
       "2024-05-23 10:00:00  58.01  57.47  58.01  57.30  265629856.5  4614020.0   \n",
       "2024-05-23 11:00:00  57.52  57.38  57.57  57.09  192771131.2  3361750.0   \n",
       "2024-05-23 12:00:00  57.37  57.47  57.70  57.09  165951291.0  2892840.0   \n",
       "2024-05-23 13:00:00  57.47  57.59  57.91  57.44  104315322.4  1808510.0   \n",
       "...                    ...    ...    ...    ...          ...        ...   \n",
       "2024-07-16 14:00:00  53.67  53.49  53.69  53.19   44093733.9   825790.0   \n",
       "2024-07-16 15:00:00  53.49  53.54  53.69  53.20   57317698.8  1073250.0   \n",
       "2024-07-16 16:00:00  53.53  53.02  53.53  52.76  115164025.8  2170620.0   \n",
       "2024-07-16 17:00:00  53.01  54.00  54.08  52.80  132720163.9  2497090.0   \n",
       "2024-07-16 18:00:00  54.01  54.58  55.15  53.59  355213137.9  6531470.0   \n",
       "\n",
       "                    ticker     RSI_14  \n",
       "date                                   \n",
       "2024-05-23 09:00:00   AFLT        NaN  \n",
       "2024-05-23 10:00:00   AFLT        NaN  \n",
       "2024-05-23 11:00:00   AFLT        NaN  \n",
       "2024-05-23 12:00:00   AFLT        NaN  \n",
       "2024-05-23 13:00:00   AFLT        NaN  \n",
       "...                    ...        ...  \n",
       "2024-07-16 14:00:00   AFLT  39.893681  \n",
       "2024-07-16 15:00:00   AFLT  40.685373  \n",
       "2024-07-16 16:00:00   AFLT  35.455009  \n",
       "2024-07-16 17:00:00   AFLT  48.811038  \n",
       "2024-07-16 18:00:00   AFLT  54.775547  \n",
       "\n",
       "[565 rows x 8 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['RSI_14'] = df.ta.rsi(close='close', length=14)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "6bcf9b2d-676f-4208-a248-01fddf68fd0a",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[18], line 10\u001b[0m\n\u001b[0;32m      7\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mRSI_14\u001b[39m\u001b[38;5;124m'\u001b[39m][\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m] \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m20\u001b[39m:\n\u001b[0;32m      8\u001b[0m     send_telegram(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mТикер: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mticker\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, Цена закрытия: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mdf[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mclose\u001b[39m\u001b[38;5;124m'\u001b[39m][\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m]\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, RSI: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mdf[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mRSI_14\u001b[39m\u001b[38;5;124m'\u001b[39m][\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m]\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m---> 10\u001b[0m \u001b[43mtime\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msleep\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m15\u001b[39;49m\u001b[43m)\u001b[49m\n",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "while True:\n",
    "    ticker = 'AFLT'\n",
    "    data = Ticker(ticker).candles(start='2024-05-23', end='2024-07-16', period=60)\n",
    "    df = process_candles(data, ticker)\n",
    "    df['RSI_14'] = df.ta.rsi(close='close', length=14)\n",
    "    \n",
    "    if df['RSI_14'][-1] > 20:\n",
    "        send_telegram(f\"Тикер: {ticker}, Цена закрытия: {df['close'][-1]}, RSI: {df['RSI_14'][-1]}\")\n",
    "        \n",
    "    time.sleep(15)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "88eb2b1f-fb39-4665-a159-a192dcb054e3",
   "metadata": {},
   "source": [
    "## MetaTrader5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "bc292ca1-4064-4100-82f4-8791a5e860ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: MetaTrader5 in c:\\users\\user\\anaconda3\\lib\\site-packages (5.0.45)\n",
      "Requirement already satisfied: numpy>=1.7 in c:\\users\\user\\anaconda3\\lib\\site-packages (from MetaTrader5) (1.23.5)\n"
     ]
    }
   ],
   "source": [
    "!pip install MetaTrader5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "441edd1f-26ee-4698-b83c-4a8b40de5e80",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import datetime\n",
    "from datetime import datetime\n",
    "from datetime import date\n",
    "import MetaTrader5 as mt5\n",
    "import time\n",
    "\n",
    "import pandas_ta as ta\n",
    "\n",
    "\n",
    "name = \"84234213\"\n",
    "key = \"@iY8AcMn\"\n",
    "serv = \"MetaQuotes-Demo\"\n",
    "path = r\"C:\\Program Files\\MetaTrader 5\\terminal64.exe\"\n",
    "symbol = \"EURUSD\"\n",
    "# lot = 0.02 \n",
    "\n",
    "# Get the Data\n",
    "mt5.initialize(login = int(name), server = serv, password = key, path = path)\n",
    "        \n",
    "symbol_info=mt5.symbol_info(\"EURUSD\")\n",
    "        \n",
    "rates = mt5.copy_rates_from_pos(\"EURUSD\", mt5.TIMEFRAME_H1, 0, 300)\n",
    "rates_frame = pd.DataFrame(rates)\n",
    "rates_frame['time']=pd.to_datetime(rates_frame['time'], unit='s')\n",
    "\n",
    "close = rates_frame['close']\n",
    "\n",
    "# Рассчет RSI с использованием pandas_ta\n",
    "rsi_ind = ta.rsi(close, length=14)\n",
    "\n",
    "# Извлечение последнего значения RSI\n",
    "last_rsi = rsi_ind.iloc[-1]\n",
    "\n",
    "# Извлечение последней цены закрытия\n",
    "last_price = close.iloc[-1]\n",
    "\n",
    "price = mt5.symbol_info_tick(symbol).ask\n",
    "\n",
    "if last_rsi>30:\n",
    "    text = 'MetaTrader5 ' + symbol + ' RSI: ' + str(round(last_rsi,3))\n",
    "    send_telegram(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "dfff9306-3604-4125-9d18-83cb1a15f44e",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>time</th>\n",
       "      <th>open</th>\n",
       "      <th>high</th>\n",
       "      <th>low</th>\n",
       "      <th>close</th>\n",
       "      <th>tick_volume</th>\n",
       "      <th>spread</th>\n",
       "      <th>real_volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-06-27 21:00:00</td>\n",
       "      <td>1.07053</td>\n",
       "      <td>1.07077</td>\n",
       "      <td>1.07021</td>\n",
       "      <td>1.07056</td>\n",
       "      <td>1384</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-06-27 22:00:00</td>\n",
       "      <td>1.07056</td>\n",
       "      <td>1.07072</td>\n",
       "      <td>1.07012</td>\n",
       "      <td>1.07027</td>\n",
       "      <td>1241</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-06-27 23:00:00</td>\n",
       "      <td>1.07027</td>\n",
       "      <td>1.07051</td>\n",
       "      <td>1.07024</td>\n",
       "      <td>1.07032</td>\n",
       "      <td>489</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-06-28 00:00:00</td>\n",
       "      <td>1.06999</td>\n",
       "      <td>1.07140</td>\n",
       "      <td>1.06996</td>\n",
       "      <td>1.07049</td>\n",
       "      <td>286</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-06-28 01:00:00</td>\n",
       "      <td>1.07048</td>\n",
       "      <td>1.07055</td>\n",
       "      <td>1.07026</td>\n",
       "      <td>1.07039</td>\n",
       "      <td>323</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>295</th>\n",
       "      <td>2024-07-16 15:00:00</td>\n",
       "      <td>1.09021</td>\n",
       "      <td>1.09055</td>\n",
       "      <td>1.08757</td>\n",
       "      <td>1.08807</td>\n",
       "      <td>2892</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>296</th>\n",
       "      <td>2024-07-16 16:00:00</td>\n",
       "      <td>1.08810</td>\n",
       "      <td>1.08832</td>\n",
       "      <td>1.08715</td>\n",
       "      <td>1.08832</td>\n",
       "      <td>2674</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>297</th>\n",
       "      <td>2024-07-16 17:00:00</td>\n",
       "      <td>1.08832</td>\n",
       "      <td>1.08848</td>\n",
       "      <td>1.08731</td>\n",
       "      <td>1.08784</td>\n",
       "      <td>2582</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>298</th>\n",
       "      <td>2024-07-16 18:00:00</td>\n",
       "      <td>1.08785</td>\n",
       "      <td>1.08861</td>\n",
       "      <td>1.08784</td>\n",
       "      <td>1.08844</td>\n",
       "      <td>2265</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>299</th>\n",
       "      <td>2024-07-16 19:00:00</td>\n",
       "      <td>1.08845</td>\n",
       "      <td>1.08864</td>\n",
       "      <td>1.08817</td>\n",
       "      <td>1.08832</td>\n",
       "      <td>869</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>300 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   time     open     high      low    close  tick_volume  \\\n",
       "0   2024-06-27 21:00:00  1.07053  1.07077  1.07021  1.07056         1384   \n",
       "1   2024-06-27 22:00:00  1.07056  1.07072  1.07012  1.07027         1241   \n",
       "2   2024-06-27 23:00:00  1.07027  1.07051  1.07024  1.07032          489   \n",
       "3   2024-06-28 00:00:00  1.06999  1.07140  1.06996  1.07049          286   \n",
       "4   2024-06-28 01:00:00  1.07048  1.07055  1.07026  1.07039          323   \n",
       "..                  ...      ...      ...      ...      ...          ...   \n",
       "295 2024-07-16 15:00:00  1.09021  1.09055  1.08757  1.08807         2892   \n",
       "296 2024-07-16 16:00:00  1.08810  1.08832  1.08715  1.08832         2674   \n",
       "297 2024-07-16 17:00:00  1.08832  1.08848  1.08731  1.08784         2582   \n",
       "298 2024-07-16 18:00:00  1.08785  1.08861  1.08784  1.08844         2265   \n",
       "299 2024-07-16 19:00:00  1.08845  1.08864  1.08817  1.08832          869   \n",
       "\n",
       "     spread  real_volume  \n",
       "0         1            0  \n",
       "1         1            0  \n",
       "2         0            0  \n",
       "3         1            0  \n",
       "4         1            0  \n",
       "..      ...          ...  \n",
       "295       0            0  \n",
       "296       0            0  \n",
       "297       0            0  \n",
       "298       1            0  \n",
       "299       1            0  \n",
       "\n",
       "[300 rows x 8 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rates_frame"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2a6ab6e-093d-4cab-801a-667d03cf4c8c",
   "metadata": {},
   "source": [
    "## Tinkoff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6f9d69e8-c256-463a-b158-19dd3c72336c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: tinkoff-investments in c:\\users\\user\\anaconda3\\lib\\site-packages (0.2.0b63)\n",
      "Requirement already satisfied: cachetools<6.0.0,>=5.2.0 in c:\\users\\user\\appdata\\roaming\\python\\python310\\site-packages (from tinkoff-investments) (5.3.1)\n",
      "Requirement already satisfied: deprecation<3.0.0,>=2.1.0 in c:\\users\\user\\anaconda3\\lib\\site-packages (from tinkoff-investments) (2.1.0)\n",
      "Collecting grpcio<2.0.0,>=1.59.3 (from tinkoff-investments)\n",
      "  Using cached grpcio-1.60.0-cp310-cp310-win_amd64.whl.metadata (4.2 kB)\n",
      "Collecting protobuf<5.0.0,>=4.25.1 (from tinkoff-investments)\n",
      "  Using cached protobuf-4.25.1-cp310-abi3-win_amd64.whl.metadata (541 bytes)\n",
      "Requirement already satisfied: python-dateutil<3.0.0,>=2.8.2 in c:\\users\\user\\anaconda3\\lib\\site-packages (from tinkoff-investments) (2.8.2)\n",
      "Requirement already satisfied: tinkoff<0.2.0,>=0.1.1 in c:\\users\\user\\anaconda3\\lib\\site-packages (from tinkoff-investments) (0.1.1)\n",
      "Requirement already satisfied: packaging in c:\\users\\user\\anaconda3\\lib\\site-packages (from deprecation<3.0.0,>=2.1.0->tinkoff-investments) (23.2)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\user\\anaconda3\\lib\\site-packages (from python-dateutil<3.0.0,>=2.8.2->tinkoff-investments) (1.16.0)\n",
      "Using cached grpcio-1.60.0-cp310-cp310-win_amd64.whl (3.7 MB)\n",
      "Using cached protobuf-4.25.1-cp310-abi3-win_amd64.whl (413 kB)\n",
      "Installing collected packages: protobuf, grpcio\n",
      "  Attempting uninstall: protobuf\n",
      "    Found existing installation: protobuf 4.23.2\n",
      "    Uninstalling protobuf-4.23.2:\n",
      "      Successfully uninstalled protobuf-4.23.2\n",
      "  Attempting uninstall: grpcio\n",
      "    Found existing installation: grpcio 1.48.2\n",
      "    Uninstalling grpcio-1.48.2:\n",
      "      Successfully uninstalled grpcio-1.48.2\n",
      "Successfully installed grpcio-1.60.0 protobuf-4.25.1\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
      "tensorflow-intel 2.12.0 requires keras<2.13,>=2.12.0, but you have keras 2.10.0 which is incompatible.\n",
      "tensorflow-intel 2.12.0 requires tensorboard<2.13,>=2.12, but you have tensorboard 2.10.0 which is incompatible.\n",
      "tensorflow-intel 2.12.0 requires tensorflow-estimator<2.13,>=2.12.0, but you have tensorflow-estimator 2.10.0 which is incompatible.\n",
      "tensorboard 2.10.0 requires protobuf<3.20,>=3.9.2, but you have protobuf 4.25.1 which is incompatible.\n",
      "tensorflow 2.10.0 requires protobuf<3.20,>=3.9.2, but you have protobuf 4.25.1 which is incompatible.\n"
     ]
    }
   ],
   "source": [
    "!pip install tinkoff-investments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "535a5d2b-e45e-4b66-bd42-1e238b5314a5",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GetAccountsResponse(accounts=[Account(id='2020044018', type=<AccountType.ACCOUNT_TYPE_TINKOFF: 1>, name='Брокерский счёт', status=<AccountStatus.ACCOUNT_STATUS_OPEN: 2>, opened_date=datetime.datetime(2020, 2, 18, 0, 0, tzinfo=datetime.timezone.utc), closed_date=datetime.datetime(1970, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), access_level=<AccessLevel.ACCOUNT_ACCESS_LEVEL_FULL_ACCESS: 1>)])\n"
     ]
    }
   ],
   "source": [
    "from tinkoff.invest import Client\n",
    "\n",
    "TOKEN = 't.pC3T0twHY1vDhFvxjsyyf47JJcANuPfyXHgymLuF0UqbZrgAhxxabMwy4jt50gHYV9veTwjVdL7-qn-N5fV9Vg'\n",
    "\n",
    "with Client(TOKEN) as client:\n",
    "    print(client.users.get_accounts())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f6cece5-f777-4ce0-b31b-f146b21a7351",
   "metadata": {},
   "source": [
    "### Получение данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "8ab6617f-3387-4a07-bfb9-8dec22adbeb8",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tinkoff BBG004730N88 RSI: 44.772\n"
     ]
    }
   ],
   "source": [
    "'''\n",
    "Зайдите в личный кабинет Тинькофф.\n",
    "Перейдите на страницу поиска инструментов.\n",
    "Введите название или тикер финансового инструмента, для которого вы хотите узнать FIGI.\n",
    "Нажмите кнопку «Найти».\n",
    "На странице с результатами поиска вы увидите список с найденными инструментами. Найдите интересующий вас инструмент в списке.\n",
    "В строке с информацией об инструменте вы увидите значок FIGI, отмеченный как «FIGI:». Рядом с ним будет указан уникальный код FIGI для данного инструмента.\n",
    "Источник: https://aquafishe.ru/tinkoff-kak-uznat-figi\n",
    "'''\n",
    "\n",
    "from datetime import timedelta\n",
    "\n",
    "from tinkoff.invest import CandleInterval, Client\n",
    "from tinkoff.invest.utils import now\n",
    "\n",
    "TOKEN = 't.pC3T0twHY1vDhFvxjsyyf47JJcANuPfyXHgymLuF0UqbZrgAhxxabMwy4jt50gHYV9veTwjVdL7-qn-N5fV9Vg'\n",
    "\n",
    "def main():\n",
    "    simple_df = []\n",
    "    figi=\"BBG004730N88\"\n",
    "    with Client(TOKEN) as client:\n",
    "        for candle in client.get_all_candles(\n",
    "            figi=figi,\n",
    "            from_=now() - timedelta(days=3),\n",
    "            interval=CandleInterval.CANDLE_INTERVAL_HOUR,\n",
    "        ):\n",
    "            open_price = candle.open.units + candle.open.nano / 1e9\n",
    "            high_price = candle.high.units + candle.high.nano / 1e9\n",
    "            low_price = candle.low.units + candle.low.nano / 1e9\n",
    "            close_price = candle.close.units + candle.close.nano / 1e9\n",
    "            volume = candle.volume\n",
    "            time = candle.time\n",
    "            \n",
    "            simple_df.append([time, open_price, high_price, low_price, close_price, volume])\n",
    "            #print(candle)\n",
    "        simple_df = pd.DataFrame(simple_df, columns = ['Time', 'Open', 'High', 'Low', 'Close', 'Volume'])\n",
    "        \n",
    "    return simple_df, figi\n",
    "\n",
    "\n",
    "simple_df, figi = main()\n",
    "\n",
    "#Приводим в формат к часовому поясу\n",
    "simple_df['Time'] = pd.to_datetime(simple_df['Time']) + pd.Timedelta(hours=3)\n",
    "\n",
    "close = simple_df['Close']\n",
    "\n",
    "# Рассчет RSI с использованием pandas_ta\n",
    "rsi_ind = ta.rsi(close, length=14)\n",
    "\n",
    "# Извлечение последнего значения RSI\n",
    "last_rsi = rsi_ind.iloc[-1]\n",
    "\n",
    "\n",
    "if last_rsi>40:\n",
    "    text = 'Tinkoff ' + figi + ' RSI: ' + str(round(last_rsi,3))\n",
    "    print(text)\n",
    "    send_telegram(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4559763b-3f5e-4ef3-a333-185a5dd94bcc",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-07-13 19:00:00+00:00</td>\n",
       "      <td>292.22</td>\n",
       "      <td>292.24</td>\n",
       "      <td>291.80</td>\n",
       "      <td>292.24</td>\n",
       "      <td>2742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-07-13 20:00:00+00:00</td>\n",
       "      <td>292.24</td>\n",
       "      <td>292.24</td>\n",
       "      <td>291.72</td>\n",
       "      <td>291.89</td>\n",
       "      <td>4956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-07-13 21:00:00+00:00</td>\n",
       "      <td>291.88</td>\n",
       "      <td>292.14</td>\n",
       "      <td>291.75</td>\n",
       "      <td>291.76</td>\n",
       "      <td>2090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-07-13 22:00:00+00:00</td>\n",
       "      <td>292.05</td>\n",
       "      <td>292.15</td>\n",
       "      <td>291.76</td>\n",
       "      <td>291.83</td>\n",
       "      <td>1618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-07-13 23:00:00+00:00</td>\n",
       "      <td>292.00</td>\n",
       "      <td>292.12</td>\n",
       "      <td>291.73</td>\n",
       "      <td>291.99</td>\n",
       "      <td>2688</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2024-07-14 10:00:00+00:00</td>\n",
       "      <td>292.40</td>\n",
       "      <td>292.91</td>\n",
       "      <td>291.58</td>\n",
       "      <td>292.39</td>\n",
       "      <td>7798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2024-07-14 11:00:00+00:00</td>\n",
       "      <td>292.39</td>\n",
       "      <td>292.40</td>\n",
       "      <td>292.00</td>\n",
       "      <td>292.24</td>\n",
       "      <td>3786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2024-07-14 12:00:00+00:00</td>\n",
       "      <td>292.24</td>\n",
       "      <td>292.24</td>\n",
       "      <td>291.70</td>\n",
       "      <td>292.17</td>\n",
       "      <td>5510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2024-07-14 13:00:00+00:00</td>\n",
       "      <td>292.17</td>\n",
       "      <td>292.21</td>\n",
       "      <td>292.00</td>\n",
       "      <td>292.01</td>\n",
       "      <td>2930</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2024-07-14 14:00:00+00:00</td>\n",
       "      <td>292.20</td>\n",
       "      <td>292.40</td>\n",
       "      <td>292.02</td>\n",
       "      <td>292.18</td>\n",
       "      <td>6708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2024-07-14 15:00:00+00:00</td>\n",
       "      <td>292.35</td>\n",
       "      <td>292.35</td>\n",
       "      <td>291.84</td>\n",
       "      <td>291.99</td>\n",
       "      <td>5378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2024-07-14 16:00:00+00:00</td>\n",
       "      <td>291.99</td>\n",
       "      <td>292.15</td>\n",
       "      <td>291.80</td>\n",
       "      <td>292.14</td>\n",
       "      <td>3484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2024-07-14 17:00:00+00:00</td>\n",
       "      <td>291.86</td>\n",
       "      <td>292.15</td>\n",
       "      <td>291.81</td>\n",
       "      <td>291.90</td>\n",
       "      <td>4868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2024-07-14 18:00:00+00:00</td>\n",
       "      <td>291.81</td>\n",
       "      <td>292.15</td>\n",
       "      <td>291.79</td>\n",
       "      <td>291.84</td>\n",
       "      <td>3378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2024-07-14 19:00:00+00:00</td>\n",
       "      <td>291.85</td>\n",
       "      <td>292.15</td>\n",
       "      <td>291.85</td>\n",
       "      <td>292.14</td>\n",
       "      <td>3360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2024-07-14 20:00:00+00:00</td>\n",
       "      <td>292.14</td>\n",
       "      <td>292.14</td>\n",
       "      <td>291.81</td>\n",
       "      <td>292.11</td>\n",
       "      <td>1978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2024-07-14 21:00:00+00:00</td>\n",
       "      <td>292.01</td>\n",
       "      <td>292.14</td>\n",
       "      <td>291.78</td>\n",
       "      <td>291.81</td>\n",
       "      <td>8206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2024-07-14 22:00:00+00:00</td>\n",
       "      <td>292.00</td>\n",
       "      <td>292.15</td>\n",
       "      <td>291.74</td>\n",
       "      <td>292.15</td>\n",
       "      <td>5512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2024-07-14 23:00:00+00:00</td>\n",
       "      <td>291.86</td>\n",
       "      <td>292.15</td>\n",
       "      <td>291.72</td>\n",
       "      <td>292.00</td>\n",
       "      <td>3232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2024-07-15 09:00:00+00:00</td>\n",
       "      <td>293.00</td>\n",
       "      <td>293.00</td>\n",
       "      <td>293.00</td>\n",
       "      <td>293.00</td>\n",
       "      <td>6115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2024-07-15 10:00:00+00:00</td>\n",
       "      <td>292.93</td>\n",
       "      <td>293.86</td>\n",
       "      <td>288.62</td>\n",
       "      <td>289.36</td>\n",
       "      <td>1186987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2024-07-15 11:00:00+00:00</td>\n",
       "      <td>289.36</td>\n",
       "      <td>290.66</td>\n",
       "      <td>288.80</td>\n",
       "      <td>290.66</td>\n",
       "      <td>450630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2024-07-15 12:00:00+00:00</td>\n",
       "      <td>290.65</td>\n",
       "      <td>291.41</td>\n",
       "      <td>290.19</td>\n",
       "      <td>290.65</td>\n",
       "      <td>317605</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2024-07-15 13:00:00+00:00</td>\n",
       "      <td>290.64</td>\n",
       "      <td>291.30</td>\n",
       "      <td>290.19</td>\n",
       "      <td>290.55</td>\n",
       "      <td>172111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2024-07-15 14:00:00+00:00</td>\n",
       "      <td>290.54</td>\n",
       "      <td>290.99</td>\n",
       "      <td>289.75</td>\n",
       "      <td>290.01</td>\n",
       "      <td>223712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2024-07-15 15:00:00+00:00</td>\n",
       "      <td>290.01</td>\n",
       "      <td>290.59</td>\n",
       "      <td>289.50</td>\n",
       "      <td>290.00</td>\n",
       "      <td>240559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2024-07-15 16:00:00+00:00</td>\n",
       "      <td>290.01</td>\n",
       "      <td>290.60</td>\n",
       "      <td>289.03</td>\n",
       "      <td>289.08</td>\n",
       "      <td>239830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2024-07-15 17:00:00+00:00</td>\n",
       "      <td>289.08</td>\n",
       "      <td>289.13</td>\n",
       "      <td>287.05</td>\n",
       "      <td>287.05</td>\n",
       "      <td>860671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2024-07-15 18:00:00+00:00</td>\n",
       "      <td>287.06</td>\n",
       "      <td>287.20</td>\n",
       "      <td>284.03</td>\n",
       "      <td>284.49</td>\n",
       "      <td>1358181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2024-07-15 19:00:00+00:00</td>\n",
       "      <td>284.54</td>\n",
       "      <td>285.46</td>\n",
       "      <td>283.57</td>\n",
       "      <td>285.22</td>\n",
       "      <td>352545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>2024-07-15 20:00:00+00:00</td>\n",
       "      <td>285.22</td>\n",
       "      <td>285.38</td>\n",
       "      <td>284.70</td>\n",
       "      <td>285.21</td>\n",
       "      <td>90088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>2024-07-15 21:00:00+00:00</td>\n",
       "      <td>285.20</td>\n",
       "      <td>285.41</td>\n",
       "      <td>284.43</td>\n",
       "      <td>285.19</td>\n",
       "      <td>123552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>2024-07-15 22:00:00+00:00</td>\n",
       "      <td>285.20</td>\n",
       "      <td>285.20</td>\n",
       "      <td>284.25</td>\n",
       "      <td>284.36</td>\n",
       "      <td>104318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>2024-07-15 23:00:00+00:00</td>\n",
       "      <td>284.32</td>\n",
       "      <td>284.45</td>\n",
       "      <td>283.50</td>\n",
       "      <td>284.38</td>\n",
       "      <td>146852</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>2024-07-16 09:00:00+00:00</td>\n",
       "      <td>284.49</td>\n",
       "      <td>284.49</td>\n",
       "      <td>284.49</td>\n",
       "      <td>284.49</td>\n",
       "      <td>4237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>2024-07-16 10:00:00+00:00</td>\n",
       "      <td>284.49</td>\n",
       "      <td>284.95</td>\n",
       "      <td>281.10</td>\n",
       "      <td>282.50</td>\n",
       "      <td>1468465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>2024-07-16 11:00:00+00:00</td>\n",
       "      <td>282.50</td>\n",
       "      <td>283.09</td>\n",
       "      <td>276.70</td>\n",
       "      <td>278.31</td>\n",
       "      <td>1836988</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>2024-07-16 12:00:00+00:00</td>\n",
       "      <td>278.31</td>\n",
       "      <td>280.70</td>\n",
       "      <td>278.01</td>\n",
       "      <td>280.59</td>\n",
       "      <td>936552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>2024-07-16 13:00:00+00:00</td>\n",
       "      <td>280.58</td>\n",
       "      <td>280.68</td>\n",
       "      <td>278.78</td>\n",
       "      <td>279.37</td>\n",
       "      <td>298705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>2024-07-16 14:00:00+00:00</td>\n",
       "      <td>279.43</td>\n",
       "      <td>279.61</td>\n",
       "      <td>278.10</td>\n",
       "      <td>279.37</td>\n",
       "      <td>341178</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>2024-07-16 15:00:00+00:00</td>\n",
       "      <td>279.38</td>\n",
       "      <td>280.00</td>\n",
       "      <td>278.18</td>\n",
       "      <td>278.41</td>\n",
       "      <td>299541</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>2024-07-16 16:00:00+00:00</td>\n",
       "      <td>278.41</td>\n",
       "      <td>279.11</td>\n",
       "      <td>277.70</td>\n",
       "      <td>278.45</td>\n",
       "      <td>300542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>2024-07-16 17:00:00+00:00</td>\n",
       "      <td>278.45</td>\n",
       "      <td>281.40</td>\n",
       "      <td>277.50</td>\n",
       "      <td>281.36</td>\n",
       "      <td>521865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>2024-07-16 18:00:00+00:00</td>\n",
       "      <td>281.33</td>\n",
       "      <td>284.70</td>\n",
       "      <td>280.52</td>\n",
       "      <td>283.00</td>\n",
       "      <td>1293895</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>2024-07-16 19:00:00+00:00</td>\n",
       "      <td>283.00</td>\n",
       "      <td>283.84</td>\n",
       "      <td>281.17</td>\n",
       "      <td>282.99</td>\n",
       "      <td>333188</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Time    Open    High     Low   Close   Volume\n",
       "0  2024-07-13 19:00:00+00:00  292.22  292.24  291.80  292.24     2742\n",
       "1  2024-07-13 20:00:00+00:00  292.24  292.24  291.72  291.89     4956\n",
       "2  2024-07-13 21:00:00+00:00  291.88  292.14  291.75  291.76     2090\n",
       "3  2024-07-13 22:00:00+00:00  292.05  292.15  291.76  291.83     1618\n",
       "4  2024-07-13 23:00:00+00:00  292.00  292.12  291.73  291.99     2688\n",
       "5  2024-07-14 10:00:00+00:00  292.40  292.91  291.58  292.39     7798\n",
       "6  2024-07-14 11:00:00+00:00  292.39  292.40  292.00  292.24     3786\n",
       "7  2024-07-14 12:00:00+00:00  292.24  292.24  291.70  292.17     5510\n",
       "8  2024-07-14 13:00:00+00:00  292.17  292.21  292.00  292.01     2930\n",
       "9  2024-07-14 14:00:00+00:00  292.20  292.40  292.02  292.18     6708\n",
       "10 2024-07-14 15:00:00+00:00  292.35  292.35  291.84  291.99     5378\n",
       "11 2024-07-14 16:00:00+00:00  291.99  292.15  291.80  292.14     3484\n",
       "12 2024-07-14 17:00:00+00:00  291.86  292.15  291.81  291.90     4868\n",
       "13 2024-07-14 18:00:00+00:00  291.81  292.15  291.79  291.84     3378\n",
       "14 2024-07-14 19:00:00+00:00  291.85  292.15  291.85  292.14     3360\n",
       "15 2024-07-14 20:00:00+00:00  292.14  292.14  291.81  292.11     1978\n",
       "16 2024-07-14 21:00:00+00:00  292.01  292.14  291.78  291.81     8206\n",
       "17 2024-07-14 22:00:00+00:00  292.00  292.15  291.74  292.15     5512\n",
       "18 2024-07-14 23:00:00+00:00  291.86  292.15  291.72  292.00     3232\n",
       "19 2024-07-15 09:00:00+00:00  293.00  293.00  293.00  293.00     6115\n",
       "20 2024-07-15 10:00:00+00:00  292.93  293.86  288.62  289.36  1186987\n",
       "21 2024-07-15 11:00:00+00:00  289.36  290.66  288.80  290.66   450630\n",
       "22 2024-07-15 12:00:00+00:00  290.65  291.41  290.19  290.65   317605\n",
       "23 2024-07-15 13:00:00+00:00  290.64  291.30  290.19  290.55   172111\n",
       "24 2024-07-15 14:00:00+00:00  290.54  290.99  289.75  290.01   223712\n",
       "25 2024-07-15 15:00:00+00:00  290.01  290.59  289.50  290.00   240559\n",
       "26 2024-07-15 16:00:00+00:00  290.01  290.60  289.03  289.08   239830\n",
       "27 2024-07-15 17:00:00+00:00  289.08  289.13  287.05  287.05   860671\n",
       "28 2024-07-15 18:00:00+00:00  287.06  287.20  284.03  284.49  1358181\n",
       "29 2024-07-15 19:00:00+00:00  284.54  285.46  283.57  285.22   352545\n",
       "30 2024-07-15 20:00:00+00:00  285.22  285.38  284.70  285.21    90088\n",
       "31 2024-07-15 21:00:00+00:00  285.20  285.41  284.43  285.19   123552\n",
       "32 2024-07-15 22:00:00+00:00  285.20  285.20  284.25  284.36   104318\n",
       "33 2024-07-15 23:00:00+00:00  284.32  284.45  283.50  284.38   146852\n",
       "34 2024-07-16 09:00:00+00:00  284.49  284.49  284.49  284.49     4237\n",
       "35 2024-07-16 10:00:00+00:00  284.49  284.95  281.10  282.50  1468465\n",
       "36 2024-07-16 11:00:00+00:00  282.50  283.09  276.70  278.31  1836988\n",
       "37 2024-07-16 12:00:00+00:00  278.31  280.70  278.01  280.59   936552\n",
       "38 2024-07-16 13:00:00+00:00  280.58  280.68  278.78  279.37   298705\n",
       "39 2024-07-16 14:00:00+00:00  279.43  279.61  278.10  279.37   341178\n",
       "40 2024-07-16 15:00:00+00:00  279.38  280.00  278.18  278.41   299541\n",
       "41 2024-07-16 16:00:00+00:00  278.41  279.11  277.70  278.45   300542\n",
       "42 2024-07-16 17:00:00+00:00  278.45  281.40  277.50  281.36   521865\n",
       "43 2024-07-16 18:00:00+00:00  281.33  284.70  280.52  283.00  1293895\n",
       "44 2024-07-16 19:00:00+00:00  283.00  283.84  281.17  282.99   333188"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "simple_df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "111414c2-12a8-447e-8635-d9fe445dc877",
   "metadata": {},
   "source": [
    "### Поиск инструментов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "07dbb60f-2c03-495b-b376-f449d1dbf3e2",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tinkoff.invest import Client, InstrumentStatus, SharesResponse, InstrumentIdType\n",
    "from tinkoff.invest.services import InstrumentsService, MarketDataService\n",
    "\n",
    "def run():\n",
    "    with Client(TOKEN) as cl:\n",
    "        instruments: InstrumentsService = cl.instruments\n",
    "        market_data: MarketDataService = cl.market_data\n",
    " \n",
    " \n",
    "        l = []\n",
    "        for method in ['shares', 'bonds', 'etfs', 'currencies', 'futures']:\n",
    "            for item in getattr(instruments, method)().instruments:\n",
    "                l.append({\n",
    "                    'ticker': item.ticker,\n",
    "                    'figi': item.figi,\n",
    "                    'type': method,\n",
    "                    'name': item.name,\n",
    "                })\n",
    " \n",
    "        df = pd.DataFrame(l)\n",
    "    return df\n",
    "\n",
    "all_symbs = run()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "8d3583aa-ec09-415a-a02c-dfd6be3d7f4b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>figi</th>\n",
       "      <th>type</th>\n",
       "      <th>name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CNX</td>\n",
       "      <td>BBG000CKVSG8</td>\n",
       "      <td>shares</td>\n",
       "      <td>CNX Resources Corporation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>SLM</td>\n",
       "      <td>BBG000BBCQD7</td>\n",
       "      <td>shares</td>\n",
       "      <td>SLM Corp</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ACLS</td>\n",
       "      <td>BBG000DW34S2</td>\n",
       "      <td>shares</td>\n",
       "      <td>Axcelis Technologies</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AMPH</td>\n",
       "      <td>BBG000BW90S6</td>\n",
       "      <td>shares</td>\n",
       "      <td>Amphastar Pharmaceuticals</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>RELY</td>\n",
       "      <td>BBG012C7JST2</td>\n",
       "      <td>shares</td>\n",
       "      <td>Remitly Global</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3723</th>\n",
       "      <td>FSZ4</td>\n",
       "      <td>FUTFEES12240</td>\n",
       "      <td>futures</td>\n",
       "      <td>FEES-12.24 ФСК Россети</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3724</th>\n",
       "      <td>BNM5</td>\n",
       "      <td>FUTBANE06250</td>\n",
       "      <td>futures</td>\n",
       "      <td>BANE-6.25 Башнефть</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3725</th>\n",
       "      <td>DJU4</td>\n",
       "      <td>FUTDJ3009240</td>\n",
       "      <td>futures</td>\n",
       "      <td>DJ30-9.24  Dow Jones 30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3726</th>\n",
       "      <td>BRK5</td>\n",
       "      <td>FUTBR0525000</td>\n",
       "      <td>futures</td>\n",
       "      <td>BR-5.25 Нефть Brent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3727</th>\n",
       "      <td>EDU4</td>\n",
       "      <td>FUTED0924000</td>\n",
       "      <td>futures</td>\n",
       "      <td>ED-9.24 Курс евро-доллар</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3728 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     ticker          figi     type                       name\n",
       "0       CNX  BBG000CKVSG8   shares  CNX Resources Corporation\n",
       "1       SLM  BBG000BBCQD7   shares                   SLM Corp\n",
       "2      ACLS  BBG000DW34S2   shares       Axcelis Technologies\n",
       "3      AMPH  BBG000BW90S6   shares  Amphastar Pharmaceuticals\n",
       "4      RELY  BBG012C7JST2   shares             Remitly Global\n",
       "...     ...           ...      ...                        ...\n",
       "3723   FSZ4  FUTFEES12240  futures     FEES-12.24 ФСК Россети\n",
       "3724   BNM5  FUTBANE06250  futures         BANE-6.25 Башнефть\n",
       "3725   DJU4  FUTDJ3009240  futures    DJ30-9.24  Dow Jones 30\n",
       "3726   BRK5  FUTBR0525000  futures        BR-5.25 Нефть Brent\n",
       "3727   EDU4  FUTED0924000  futures   ED-9.24 Курс евро-доллар\n",
       "\n",
       "[3728 rows x 4 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_symbs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a7d11cbe-ccb9-40fd-88b1-e6b14cc0ff25",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "shares        1995\n",
       "bonds         1094\n",
       "futures        362\n",
       "etfs           265\n",
       "currencies      12\n",
       "Name: type, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_symbs['type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "5e8c4cc8-4c54-4b8a-a6d9-ba6c8f76692d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>figi</th>\n",
       "      <th>type</th>\n",
       "      <th>name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1306</th>\n",
       "      <td>SBER</td>\n",
       "      <td>BBG004730N88</td>\n",
       "      <td>shares</td>\n",
       "      <td>Сбер Банк</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     ticker          figi    type       name\n",
       "1306   SBER  BBG004730N88  shares  Сбер Банк"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_symbs[all_symbs['figi']=='BBG004730N88']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "9891c456-1730-402c-9605-7dec55c34730",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'BBG004730N88'"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "key_tickers = dict(zip(all_symbs['ticker'], all_symbs['figi']))\n",
    "key_tickers.get('SBER')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "86cb3a14-cd00-48ef-bcca-200be75e16a4",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Поиск ключа по значению\n",
    "def find_key(key_tickers, figi='BBG004730N88'):\n",
    "    for key, val in key_tickers.items():\n",
    "        if figi == val:\n",
    "            return key\n",
    "    return None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "7f83866c-6d8b-4509-8aaf-346fb1e4330b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'SBER'"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "find_key(key_tickers, figi='BBG004730N88')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "c08162c1-6e74-4939-b384-19ad5c5a17eb",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Поиск значения по ключу\n",
    "def find_value(key_tickers, key):\n",
    "    return key_tickers.get(key)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "8fda82bd-c7b3-41ed-81ce-aab788d25659",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'BBG004730N88'"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "find_value(key_tickers, 'SBER')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a0bcc00-8b80-4d23-b2d8-2395824e9e75",
   "metadata": {},
   "source": [
    "# Выделенный сервер"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "f688d1ed-bb3d-43d6-8972-1f0978062cc0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Для тех, кто хочет держать все удаленно\n"
     ]
    }
   ],
   "source": [
    "'''\n",
    "Нам надо подобрать дата-центр с хорошими отзывами и адекватной ценой\n",
    "\n",
    "Selectel основной кандидат\n",
    "\n",
    "https://selectel.ru/\n",
    "\n",
    "\n",
    "Фильтр по серверам:\n",
    "https://ru.tophosts.net/filter-dedicated-server\n",
    "'''\n",
    "\n",
    "print('Для тех, кто хочет держать все удаленно')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb5c3567-e9cc-4841-bf20-cde409c3336b",
   "metadata": {},
   "source": [
    "# У кого есть заруб карта и паспорт заруб"
   ]
  },
  {
   "cell_type": "raw",
   "id": "0f601450-f3d5-4ee3-b393-6b167af68f53",
   "metadata": {},
   "source": [
    "1. Заходим на гугл и ищем googleVMs - google virt machines\n",
    "2. Привязываем карту и используем 30.000 рублей бесплатных на аренду сервера\n",
    "3. Меняем карты по возможности и аккаунт"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
